function [model, precision, recall, iso_count] = build_classifier(Num_Clusters)
%   This script trains the Litt Lab classifier using the specified number
%   of clusters.

    %% Test Set Identification
    %This loads the .mat files, generated by "patient_clustering_pipeline".
%     load('BigOlLabels.mat')
%     load('BigOlFeats.mat')
    
    % Load data from ictals/interictals.mat (ola)
    load('LABELS.mat', 'LABELS')
    load('FEATURES.mat', 'FEATURES')

    %We begin by adding all features and labels to the training dataset
    TrainFeats = FEATURES;
    TrainLabels = LABELS;

    %A random subset of patients are selected to be in the test set.
    TestSize = 4;
    index = randsample(length(TrainFeats), TestSize)'; % (ola)

    %The randomly selected patients are added to a new test set, and then
    %deleted from the training set.
    TestFeats = cell(1, TestSize);
    TestLabels = cell(1, TestSize);
    for i = 1:TestSize
        TestFeats{i} = TrainFeats{index(i)};
        TestLabels{i} = TrainLabels{index(i)};
        TrainFeats{index(i)} = [];
        TrainLabels{index(i)} = [];
    end

%     for i = 1:length(index)
%         TrainFeats{index(i)} = [];
%         TrainLabels{index(i)} = [];
%     end

    found_one = true;
    while(found_one)
        for counter = 1:length(TrainFeats)
            found_one = false;
            if(isempty(TrainFeats{counter}))
                 TrainFeats(counter) = [];
                 TrainLabels(counter) = [];
                 found_one = true;
                 break;
            end
        end
    end

    %% Training

    %Unsupervised Training. Before we train classifiers for each of the patient
    %clusters, we have an opportunity to warm-up our clustering algorithm with
    %patients whose seizure annotations we do not have. This is a simple call
    %to the Data2Cluster method, which is described elsewhere. Its stack of
    %features used for clustering is stored as a persistent variable. See
    %Data2Cluster.m for details. The inde

    %Supervised Training. The training set of patients is clustered, and cluster-specific classifier
    %are trained on each cluster.
    [f1, precision, recall, model] = ...
        random_Forest(TrainFeats, TrainLabels, TestFeats, TestLabels);
%         train_rf(TrainFeats, TrainLabels);
        
    fprintf(1, 'Precision: %.3f \nRecall: %.3f \nF1: %.3f\n', ...
        precision, recall, f1);
%     save('classifier', 'modelArray')
end
